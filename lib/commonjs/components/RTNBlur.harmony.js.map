{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_RTNBlurNativeComponent","_interopRequireDefault","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_extends","assign","bind","arguments","length","apply","RTNBlur","forwardRef","blurStyle","colorMode","blurAmount","style","rest","ref","createElement","StyleSheet","compose","styles","transparent","create","backgroundColor","_default","exports"],"sources":["RTNBlur.harmony.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\r\nimport {StyleSheet, ViewProps, ViewStyle, View } from 'react-native';\r\nimport NativeRTNBlur from '../fabric/RTNBlurNativeComponent';\r\n\r\n  type BlurStyle  =\r\n    | 'thin'\r\n    | 'regular'\r\n    | 'thick'\r\n    | 'backgroundThin'\r\n    | 'backgroundRegular'\r\n    | 'backgroundThick'\r\n    | 'backgroundUltraThick'\r\n    | 'none'\r\n    | 'componentUltraThin'\r\n    | 'componentThin'\r\n    | 'componentRegular'\r\n    | 'componentThick'\r\n    | 'componentUltraThick';\r\n\r\n  type ColorMode =\r\n    | 'system'\r\n    | 'light'\r\n    | 'dark';\r\n\r\nexport type RTNBlurProps = ViewProps & {\r\n    blurStyle?:BlurStyle;\r\n    colorMode?:ColorMode;\r\n    blurAmount?: number;\r\n}\r\n\r\nconst RTNBlur = forwardRef<View, RTNBlurProps>(\r\n    ({ blurStyle = 'dark', colorMode = 'system', blurAmount=10, style, ...rest }, ref) => (\r\n      <NativeRTNBlur\r\n        ref={ref}\r\n        style={StyleSheet.compose(styles.transparent, style)}\r\n        blurStyle={blurStyle as BlurStyle}\r\n        colorMode={colorMode}\r\n        blurAmount={blurAmount}\r\n        {...rest}\r\n      />\r\n    )\r\n  );\r\n\r\n  const styles = StyleSheet.create<{ transparent: ViewStyle }>({\r\n    transparent: {  backgroundColor: 'transparent'  },\r\n  });\r\n  \r\n  export default RTNBlur;"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,uBAAA,GAAAC,sBAAA,CAAAH,OAAA;AAA6D,SAAAG,uBAAAC,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,yBAAAH,CAAA,6BAAAI,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAD,wBAAA,YAAAA,CAAAH,CAAA,WAAAA,CAAA,GAAAM,CAAA,GAAAD,CAAA,KAAAL,CAAA;AAAA,SAAAL,wBAAAK,CAAA,EAAAK,CAAA,SAAAA,CAAA,IAAAL,CAAA,IAAAA,CAAA,CAAAC,UAAA,SAAAD,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAE,OAAA,EAAAF,CAAA,QAAAM,CAAA,GAAAH,wBAAA,CAAAE,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAC,GAAA,CAAAP,CAAA,UAAAM,CAAA,CAAAE,GAAA,CAAAR,CAAA,OAAAS,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAf,CAAA,oBAAAe,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAe,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAd,CAAA,EAAAe,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAf,CAAA,CAAAe,CAAA,YAAAN,CAAA,CAAAP,OAAA,GAAAF,CAAA,EAAAM,CAAA,IAAAA,CAAA,CAAAa,GAAA,CAAAnB,CAAA,EAAAS,CAAA,GAAAA,CAAA;AAAA,SAAAW,SAAA,WAAAA,QAAA,GAAAR,MAAA,CAAAS,MAAA,GAAAT,MAAA,CAAAS,MAAA,CAAAC,IAAA,eAAAb,CAAA,aAAAT,CAAA,MAAAA,CAAA,GAAAuB,SAAA,CAAAC,MAAA,EAAAxB,CAAA,UAAAM,CAAA,GAAAiB,SAAA,CAAAvB,CAAA,YAAAK,CAAA,IAAAC,CAAA,OAAAU,cAAA,CAAAC,IAAA,CAAAX,CAAA,EAAAD,CAAA,MAAAI,CAAA,CAAAJ,CAAA,IAAAC,CAAA,CAAAD,CAAA,aAAAI,CAAA,KAAAW,QAAA,CAAAK,KAAA,OAAAF,SAAA;AA4B7D,MAAMG,OAAO,gBAAG,IAAAC,iBAAU,EACtB,CAAC;EAAEC,SAAS,GAAG,MAAM;EAAEC,SAAS,GAAG,QAAQ;EAAEC,UAAU,GAAC,EAAE;EAAEC,KAAK;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,kBAC/EvC,MAAA,CAAAQ,OAAA,CAAAgC,aAAA,CAACpC,uBAAA,CAAAI,OAAa,EAAAkB,QAAA;EACZa,GAAG,EAAEA,GAAI;EACTF,KAAK,EAAEI,uBAAU,CAACC,OAAO,CAACC,MAAM,CAACC,WAAW,EAAEP,KAAK,CAAE;EACrDH,SAAS,EAAEA,SAAuB;EAClCC,SAAS,EAAEA,SAAU;EACrBC,UAAU,EAAEA;AAAW,GACnBE,IAAI,CACT,CAEL,CAAC;AAED,MAAMK,MAAM,GAAGF,uBAAU,CAACI,MAAM,CAA6B;EAC3DD,WAAW,EAAE;IAAGE,eAAe,EAAE;EAAe;AAClD,CAAC,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAxC,OAAA,GAEYwB,OAAO","ignoreList":[]}